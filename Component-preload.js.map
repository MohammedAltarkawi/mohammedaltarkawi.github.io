{"version":3,"file":"Component-preload.js","sections":[{"offset":{"line":1,"column":0},"map":{"version":3,"names":[],"sources":["Component-preload.js?bundle-code-0"],"mappings":"AAAA;AACA","sourcesContent":["sap.ui.require.preload({\n"],"sourceRoot":""}},{"offset":{"line":3,"column":0},"map":{"version":3,"file":"Component.js","names":["models","_interopRequireDefault","__models","Component","UIComponent","extend","metadata","manifest","init","_init","UIComponent.prototype.init.call","this","setModel","createDeviceModel","getRouter","initialize","getContentDensityClass","_getContentDensityClass","contentDensityClass","undefined","document","body","classList","contains","Device","support","touch"],"sources":["Component.ts"],"sourcesContent":["import UIComponent from \"sap/ui/core/UIComponent\";\nimport models from \"./model/models\";\nimport Device from \"sap/ui/Device\";\n\n/**\n * @namespace mst.githubpage\n */\nexport default class Component extends UIComponent {\n\tpublic static metadata = {\n\t\tmanifest: \"json\",\n\t};\n\n\tprivate contentDensityClass: string;\n\n\tpublic init(): void {\n\t\t// call the base component's init function\n\t\tsuper.init();\n\n\t\t// create the device model\n\t\tthis.setModel(models.createDeviceModel(), \"device\");\n\n\t\t// create the views based on the url/hash\n\t\tthis.getRouter().initialize();\n\t}\n\n\t/**\n\t * This method can be called to determine whether the sapUiSizeCompact or sapUiSizeCozy\n\t * design mode class should be set, which influences the size appearance of some controls.\n\t * @public\n\t * @returns css class, either 'sapUiSizeCompact' or 'sapUiSizeCozy' - or an empty string if no css class should be set\n\t */\n\tpublic getContentDensityClass(): string {\n\t\tif (this.contentDensityClass === undefined) {\n\t\t\t// check whether FLP has already set the content density class; do nothing in this case\n\t\t\tif (document.body.classList.contains(\"sapUiSizeCozy\") || document.body.classList.contains(\"sapUiSizeCompact\")) {\n\t\t\t\tthis.contentDensityClass = \"\";\n\t\t\t} else if (!Device.support.touch) {\n\t\t\t\t// apply \"compact\" mode if touch is not supported\n\t\t\t\tthis.contentDensityClass = \"sapUiSizeCompact\";\n\t\t\t} else {\n\t\t\t\t// \"cozy\" in case of touch support; default for most sap.m controls, but needed for desktop-first controls like sap.ui.table.Table\n\t\t\t\tthis.contentDensityClass = \"sapUiSizeCozy\";\n\t\t\t}\n\t\t}\n\t\treturn this.contentDensityClass;\n\t}\n}\n"],"mappings":"AAAA,4MACOA,EAAMC,EAAAC,GAGb,MAGqBC,EAAkBC,EAAWC,OAAA,4BACnCC,SAAW,CACxBC,SAAU,QAKJC,KAAI,SAAAC,IAEVC,sBAAAC,MAGAA,KAAKC,SAASZ,EAAOa,oBAAqB,UAG1CF,KAAKG,YAAYC,YAClB,EAQOC,uBAAsB,SAAAC,IAC5B,GAAIN,KAAKO,sBAAwBC,UAAW,CAE3C,GAAIC,SAASC,KAAKC,UAAUC,SAAS,kBAAoBH,SAASC,KAAKC,UAAUC,SAAS,oBAAqB,CAC9GZ,KAAKO,oBAAsB,EAC5B,MAAO,IAAKM,EAAOC,QAAQC,MAAO,CAEjCf,KAAKO,oBAAsB,kBAC5B,KAAO,CAENP,KAAKO,oBAAsB,eAC5B,CACD,CACA,OAAOP,KAAKO,mBACb,IAAC,OAtCmBf,CAAS","ignoreList":[],"sourceRoot":""}},{"offset":{"line":6,"column":0},"map":{"version":3,"file":"App.controller.js","names":["BaseController","_interopRequireDefault","__BaseController","App","extend","onInit","_onInit","this","getView","addStyleClass","getOwnerComponent","getContentDensityClass"],"sources":["App.controller.ts"],"sourcesContent":["import BaseController from \"./BaseController\";\n\n/**\n * @namespace mst.githubpage.controller\n */\nexport default class App extends BaseController {\n\tpublic onInit(): void {\n\t\t// apply content density mode to root view\n\t\tthis.getView().addStyleClass(this.getOwnerComponent().getContentDensityClass());\n\t}\n}\n"],"mappings":"AAAA,gKAAOA,EAAcC,EAAAC,GAErB,MAGqBC,EAAYH,EAAcI,OAAA,iCACvCC,OAAM,SAAAC,IAEZC,KAAKC,UAAUC,cAAcF,KAAKG,oBAAoBC,yBACvD,IAAC,OAJmBR,CAAG","ignoreList":[],"sourceRoot":"controller"}},{"offset":{"line":9,"column":0},"map":{"version":3,"file":"BaseController.js","names":["BaseController","Controller","extend","getOwnerComponent","_getOwnerComponent","Controller.prototype.getOwnerComponent.call","this","getRouter","_getRouter","UIComponent","getRouterFor","getResourceBundle","_getResourceBundle","oModel","getModel","_getModel","sName","getView","setModel","_setModel","navTo","_navTo","oParameters","bReplace","undefined","onNavBack","_onNavBack","sPreviousHash","History","getInstance","getPreviousHash","window","history","go"],"sources":["BaseController.ts"],"sourcesContent":["import Controller from \"sap/ui/core/mvc/Controller\";\nimport UIComponent from \"sap/ui/core/UIComponent\";\nimport AppComponent from \"../Component\";\nimport Model from \"sap/ui/model/Model\";\nimport ResourceModel from \"sap/ui/model/resource/ResourceModel\";\nimport ResourceBundle from \"sap/base/i18n/ResourceBundle\";\nimport Router from \"sap/ui/core/routing/Router\";\nimport History from \"sap/ui/core/routing/History\";\n\n/**\n * @namespace mst.githubpage.controller\n */\nexport default abstract class BaseController extends Controller {\n\t/**\n\t * Convenience method for accessing the component of the controller's view.\n\t * @returns The component of the controller's view\n\t */\n\tpublic getOwnerComponent(): AppComponent {\n\t\treturn super.getOwnerComponent() as AppComponent;\n\t}\n\n\t/**\n\t * Convenience method to get the components' router instance.\n\t * @returns The router instance\n\t */\n\tpublic getRouter(): Router {\n\t\treturn UIComponent.getRouterFor(this);\n\t}\n\n\t/**\n\t * Convenience method for getting the i18n resource bundle of the component.\n\t * @returns The i18n resource bundle of the component\n\t */\n\tpublic getResourceBundle(): ResourceBundle | Promise<ResourceBundle> {\n\t\tconst oModel = this.getOwnerComponent().getModel(\"i18n\") as ResourceModel;\n\t\treturn oModel.getResourceBundle();\n\t}\n\n\t/**\n\t * Convenience method for getting the view model by name in every controller of the application.\n\t * @param [sName] The model name\n\t * @returns The model instance\n\t */\n\tpublic getModel(sName?: string): Model {\n\t\treturn this.getView().getModel(sName);\n\t}\n\n\t/**\n\t * Convenience method for setting the view model in every controller of the application.\n\t * @param oModel The model instance\n\t * @param [sName] The model name\n\t * @returns The current base controller instance\n\t */\n\tpublic setModel(oModel: Model, sName?: string): BaseController {\n\t\tthis.getView().setModel(oModel, sName);\n\t\treturn this;\n\t}\n\n\t/**\n\t * Convenience method for triggering the navigation to a specific target.\n\t * @public\n\t * @param sName Target name\n\t * @param [oParameters] Navigation parameters\n\t * @param [bReplace] Defines if the hash should be replaced (no browser history entry) or set (browser history entry)\n\t */\n\tpublic navTo(sName: string, oParameters?: object, bReplace?: boolean): void {\n\t\tthis.getRouter().navTo(sName, oParameters, undefined, bReplace);\n\t}\n\n\t/**\n\t * Convenience event handler for navigating back.\n\t * It there is a history entry we go one step back in the browser history\n\t * If not, it will replace the current entry of the browser history with the main route.\n\t */\n\tpublic onNavBack(): void {\n\t\tconst sPreviousHash = History.getInstance().getPreviousHash();\n\t\tif (sPreviousHash !== undefined) {\n\t\t\twindow.history.go(-1);\n\t\t} else {\n\t\t\tthis.getRouter().navTo(\"main\", {}, undefined, true);\n\t\t}\n\t}\n}\n"],"mappings":"AAAA,+IASA,MAG8BA,EAAuBC,EAAUC,OAAA,4CAKvDC,kBAAiB,SAAAC,IACvB,OAAAC,mCAAAC,KACD,EAMOC,UAAS,SAAAC,IACf,OAAOC,EAAYC,aAAaJ,KACjC,EAMOK,kBAAiB,SAAAC,IACvB,MAAMC,EAASP,KAAKH,oBAAoBW,SAAS,QACjD,OAAOD,EAAOF,mBACf,EAOOG,SAAQ,SAAAC,EAACC,GACf,OAAOV,KAAKW,UAAUH,SAASE,EAChC,EAQOE,SAAQ,SAAAC,EAACN,EAAeG,GAC9BV,KAAKW,UAAUC,SAASL,EAAQG,GAChC,OAAOV,IACR,EASOc,MAAK,SAAAC,EAACL,EAAeM,EAAsBC,GACjDjB,KAAKC,YAAYa,MAAMJ,EAAOM,EAAaE,UAAWD,EACvD,EAOOE,UAAS,SAAAC,IACf,MAAMC,EAAgBC,EAAQC,cAAcC,kBAC5C,GAAIH,IAAkBH,UAAW,CAChCO,OAAOC,QAAQC,IAAI,EACpB,KAAO,CACN3B,KAAKC,YAAYa,MAAM,OAAQ,CAAC,EAAGI,UAAW,KAC/C,CACD,IAAC,OArE4BxB,CAAc","ignoreList":[],"sourceRoot":"controller"}},{"offset":{"line":12,"column":0},"map":{"version":3,"file":"Main.controller.js","names":["BaseController","_interopRequireDefault","__BaseController","Main","extend","constructor","prototype","apply","this","arguments","_sLightTheme","_sDarkTheme","sayHello","_sayHello","MessageBox","show","toggleTheme","_toggleTheme","oEvent","oSwitch","getSource","sState","getState","Theming","setTheme","onOpenDialog","_onOpenDialog","oButton","dialogPromise","loadFragment","name","then","oDialog","openBy","handlePopoverPress","async","_handlePopoverPress","oView","getView","oPopover","Fragment","load","id","getId","controller","addDependent","_getInfoPopover"],"sources":["Main.controller.ts"],"sourcesContent":["import MessageBox from \"sap/m/MessageBox\";\r\nimport BaseController from \"./BaseController\";\r\nimport Theming from \"sap/ui/core/Theming\";\r\nimport Event from \"sap/ui/base/Event\";\r\nimport Switch from \"sap/m/Switch\";\r\nimport Button from \"sap/m/Button\";\r\nimport Fragment from \"sap/ui/core/Fragment\";\r\nimport Popover from \"sap/m/Popover\";\r\nimport Dialog from \"sap/m/Dialog\";\r\n\r\n/**\r\n * @namespace mst.githubpage.controller\r\n */\r\nexport default class Main extends BaseController {\r\n\r\n\tprivate _sLightTheme = \"sap_horizon\";\r\n\tprivate _sDarkTheme = \"sap_horizon_dark\";\r\n\tprivate dialogPromise: Promise<Popover>;\r\n\r\n\tpublic sayHello(): void {\r\n\t\tMessageBox.show(\"Hello World!\");\r\n\t}\r\n\r\n\r\n\t/**\r\n\t * @returns {void}\r\n\t */\r\n\tpublic toggleTheme(oEvent: Event): void {\r\n\t\tconst oSwitch = oEvent.getSource() as Switch;\r\n\t\tconst sState = oSwitch.getState();\r\n\t\tif (sState) {\r\n\t\t\tTheming.setTheme(this._sDarkTheme);\r\n\t\t} else {\r\n\t\t\tTheming.setTheme(this._sLightTheme);\r\n\t\t}\r\n\t}\r\n\r\n\r\n\tonOpenDialog(oEvent: Event): void {\r\n\t\tconst oButton = oEvent.getSource() as Button\r\n\t\t// create dialog lazily\r\n\t\t\tif (!this.dialogPromise) {\r\n\t\t\t\tthis.dialogPromise = <Promise<Popover>> this.loadFragment({\r\n\t\t\t\t\tname: 'mst.githubpage.fragments.InfoPopover'\r\n\t\t\t\t});\r\n\t\t\t} \r\n\t\t\tthis.dialogPromise.then(function(oDialog) {\r\n\t\t\t\tdebugger\r\n\t\t\t\toDialog.openBy(oButton)\r\n\t\t\t});\r\n\t\t}   \r\n\r\n\tpublic async handlePopoverPress(oEvent: Event){\r\n\t\tconst oButton = oEvent.getSource() as Button,\r\n\t\toView = this.getView();\r\n\r\n\t\tconst oPopover = (await Fragment.load({\r\n            id: oView.getId(),\r\n            name: 'mst.github.view.fragments.InfoPopover',\r\n            controller: this\r\n        })) as Popover;\r\n\r\n\t\toView.addDependent(oPopover)\r\n\t\toPopover.openBy(oButton)\r\n\t}\r\n\r\n\tprivate _getInfoPopover(){\r\n\t\t\r\n\t}\r\n}\r\n"],"mappings":"AAAA,sOACOA,EAAcC,EAAAC,GASrB,MAGqBC,EAAaH,EAAcI,OAAA,kCAAAC,YAAA,SAAAA,IAAAL,EAAAM,UAAAD,YAAAE,MAAAC,KAAAC,WAAAD,KAEvCE,aAAe,cAAaF,KAC5BG,YAAc,kBAAkB,EAGjCC,SAAQ,SAAAC,IACdC,EAAWC,KAAK,eACjB,EAMOC,YAAW,SAAAC,EAACC,GAClB,MAAMC,EAAUD,EAAOE,YACvB,MAAMC,EAASF,EAAQG,WACvB,GAAID,EAAQ,CACXE,EAAQC,SAAShB,KAAKG,YACvB,KAAO,CACNY,EAAQC,SAAShB,KAAKE,aACvB,CACD,EAGAe,aAAY,SAAAC,EAACR,GACZ,MAAMS,EAAUT,EAAOE,YAEtB,IAAKZ,KAAKoB,cAAe,CACxBpB,KAAKoB,cAAmCpB,KAAKqB,aAAa,CACzDC,KAAM,wCAER,CACAtB,KAAKoB,cAAcG,KAAK,SAASC,GAChC,SACAA,EAAQC,OAAON,EAChB,EACD,EAEYO,mBAAkBC,eAAAC,EAAClB,GAC/B,MAAMS,EAAUT,EAAOE,YACvBiB,EAAQ7B,KAAK8B,UAEb,MAAMC,QAAkBC,EAASC,KAAK,CAC5BC,GAAIL,EAAMM,QACVb,KAAM,wCACNc,WAAYpC,OAGtB6B,EAAMQ,aAAaN,GACnBA,EAASN,OAAON,EACjB,EAEQmB,gBAAe,SAAAA,IAEvB,IAAC,OAvDmB3C,CAAI","ignoreList":[],"sourceRoot":"controller"}},{"offset":{"line":20,"column":0},"map":{"version":3,"file":"formatter.js","names":["formatValue","value","toUpperCase","__exports"],"sources":["formatter.ts"],"sourcesContent":["export default {\n\tformatValue: (value: string) => {\n\t\treturn value?.toUpperCase();\n\t}\n};\n"],"mappings":"AAAA,4DAAe,CACdA,YAAcC,GACNA,GAAOC,eAEf,OAAAC,CAAA","ignoreList":[],"sourceRoot":"model"}},{"offset":{"line":23,"column":0},"map":{"version":3,"file":"models.js","names":["createDeviceModel","oModel","JSONModel","Device","setDefaultBindingMode","BindingMode","OneWay","__exports"],"sources":["models.ts"],"sourcesContent":["import JSONModel from \"sap/ui/model/json/JSONModel\";\nimport BindingMode from \"sap/ui/model/BindingMode\";\n\nimport Device from \"sap/ui/Device\";\n\n\nexport default {\n\tcreateDeviceModel: () => {\n\t\tconst oModel = new JSONModel(Device);\n\t\toModel.setDefaultBindingMode(BindingMode.OneWay);\n\t\treturn oModel;\n\t}\n};\n"],"mappings":"AAAA,yIAMe,CACdA,kBAAmBA,KAClB,MAAMC,EAAS,IAAIC,EAAUC,GAC7BF,EAAOG,sBAAsBC,EAAYC,QACzC,OAAOL,CAAM,GAEd,OAAAM,CAAA","ignoreList":[],"sourceRoot":"model"}}]}