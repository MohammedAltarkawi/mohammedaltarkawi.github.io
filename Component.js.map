{"version":3,"file":"Component.js","names":["models","_interopRequireDefault","__models","ResourceBundlerAccessor","___model_utils_ResourceBundle","Component","UIComponent","extend","metadata","manifest","init","_init","this","getResourceBundle","UIComponent.prototype.init.call","setModel","createDeviceModel","getRouter","initialize","getContentDensityClass","_getContentDensityClass","contentDensityClass","undefined","document","body","classList","contains","Device","support","touch","_getResourceBundle","resourceModel","getModel"],"sources":["Component.ts"],"sourcesContent":["import UIComponent from \"sap/ui/core/UIComponent\";\nimport models from \"./model/models\";\nimport ResourceBundle from 'sap/base/i18n/ResourceBundle';\nimport Device from \"sap/ui/Device\";\nimport ResourceModel from 'sap/ui/model/resource/ResourceModel';\nimport { ResourceBundlerAccessor } from \"./model/utils/ResourceBundle\";\n\n/**\n * @namespace mst.github\n */\nexport default class Component extends UIComponent {\n\tpublic static metadata = {\n\t\tmanifest: \"json\",\n\t};\n\n\tprivate contentDensityClass: string;\n\n\tpublic init(): void {\n\t\tResourceBundlerAccessor.init(this.getResourceBundle());\n\t\t// call the base component's init function\n\t\tsuper.init();\n\n\t\t// create the device model\n\t\tthis.setModel(models.createDeviceModel(), \"device\");\n\n\t\t// create the views based on the url/hash\n\t\tthis.getRouter().initialize();\n\t}\n\n\t/**\n\t * This method can be called to determine whether the sapUiSizeCompact or sapUiSizeCozy\n\t * design mode class should be set, which influences the size appearance of some controls.\n\t * @public\n\t * @returns css class, either 'sapUiSizeCompact' or 'sapUiSizeCozy' - or an empty string if no css class should be set\n\t */\n\tpublic getContentDensityClass(): string {\n\t\tif (this.contentDensityClass === undefined) {\n\t\t\t// check whether FLP has already set the content density class; do nothing in this case\n\t\t\tif (document.body.classList.contains(\"sapUiSizeCozy\") || document.body.classList.contains(\"sapUiSizeCompact\")) {\n\t\t\t\tthis.contentDensityClass = \"\";\n\t\t\t} else if (!Device.support.touch) {\n\t\t\t\t// apply \"compact\" mode if touch is not supported\n\t\t\t\tthis.contentDensityClass = \"sapUiSizeCompact\";\n\t\t\t} else {\n\t\t\t\t// \"cozy\" in case of touch support; default for most sap.m controls, but needed for desktop-first controls like sap.ui.table.Table\n\t\t\t\tthis.contentDensityClass = \"sapUiSizeCozy\";\n\t\t\t}\n\t\t}\n\t\treturn this.contentDensityClass;\n\t}\n\n\tgetResourceBundle(): ResourceBundle {\n        const resourceModel = <ResourceModel>this.getModel('i18n');\n        return resourceModel.getResourceBundle() as ResourceBundle;\n    }\n}\n"],"mappings":"6OACOA,EAAMC,EAAAC,GAAA,MAIJC,EAAuBC,EAAA,2BAEhC,MAGqBC,EAAkBC,EAAWC,OAAA,wBACnCC,SAAW,CACxBC,SAAU,QAKJC,KAAI,SAAAC,IACVR,EAAwBO,KAAKE,KAAKC,qBAElCC,sBAAAF,MAGAA,KAAKG,SAASf,EAAOgB,oBAAqB,UAG1CJ,KAAKK,YAAYC,YAClB,EAQOC,uBAAsB,SAAAC,IAC5B,GAAIR,KAAKS,sBAAwBC,UAAW,CAE3C,GAAIC,SAASC,KAAKC,UAAUC,SAAS,kBAAoBH,SAASC,KAAKC,UAAUC,SAAS,oBAAqB,CAC9Gd,KAAKS,oBAAsB,EAC5B,MAAO,IAAKM,EAAOC,QAAQC,MAAO,CAEjCjB,KAAKS,oBAAsB,kBAC5B,KAAO,CAENT,KAAKS,oBAAsB,eAC5B,CACD,CACA,OAAOT,KAAKS,mBACb,EAEAR,kBAAiB,SAAAiB,IACV,MAAMC,EAA+BnB,KAAKoB,SAAS,QACnD,OAAOD,EAAclB,mBACzB,IAAC,OA5CgBR,CAAS","ignoreList":[]}